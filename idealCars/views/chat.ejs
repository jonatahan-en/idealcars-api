<!doctype html>
<html>
<head>
    <title>Chat de anuncios</title>
    <script src="/socket.io/socket.io.js"></script>
    <link rel="stylesheet" href="/css/chat.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>
    <div class="chat-container">
        <h1>Chat de anuncios</h1>
        <ul id="messages"></ul>
        <form id="form">
            <input id="input" autocomplete="off" placeholder="Escribe un mensaje..." />
            <button>Enviar</button>
        </form>
    </div>
    <script>
        const socket = io();
        const adId = "<%= adId %>";
        const userId = "<%= userId %>";

        const form = document.getElementById('form');
        const input = document.getElementById('input');
        const messages = document.getElementById('messages');

        // Unirse a la sala del anuncio
        socket.emit('join-chat', adId);

        // Cargar historial de mensajes
        socket.on('chat-history', ({ messages: chatMessages, productName }) => {
            // Verificar si el tÃ­tulo ya existe
            let productTitle = document.getElementById('productName');
            if (!productTitle) {
                productTitle = document.createElement('h2');
                productTitle.id = 'productName';
                productTitle.textContent = `Chat para el producto: ${productName}`;
                document.querySelector('.chat-container').insertBefore(productTitle, document.querySelector('#messages'));
            }

            // Limpiar mensajes previos para evitar duplicados
            messages.innerHTML = ''; 
            chatMessages.forEach(({ text, userName, createdAt }) => {
                const item = document.createElement('li');
                const time = new Date(createdAt).toLocaleTimeString('en-US', { 
                    hour: '2-digit', minute: '2-digit', hour12: true 
                });
                const timeSpan = document.createElement('span');
                timeSpan.className = 'time';
                timeSpan.textContent = time;
                
                const userSpan = document.createElement('span');
                userSpan.className = 'username';
                userSpan.textContent = userName;
                
                const messageSpan = document.createElement('span');
                messageSpan.className = 'message-text';
                messageSpan.textContent = text;
                
                item.appendChild(timeSpan);
                item.appendChild(userSpan);
                item.appendChild(messageSpan);
                messages.appendChild(item);
            });
            
            messages.scrollTop = messages.scrollHeight;
        });

        // Enviar mensaje al servidor
        form.addEventListener('submit', (e) => {
            e.preventDefault();
            const text = input.value.trim();
            if (text) {
                socket.emit('chat-message', { text, adId });
                input.value = '';
            }
        });

        // Recibir mensajes del servidor
        socket.on('chat-message', ({ text, userName, createdAt }) => {
            const item = document.createElement('li');
            const time = new Date(createdAt).toLocaleTimeString('en-US', { 
                hour: '2-digit', minute: '2-digit', hour12: true 
            });
            
            const timeSpan = document.createElement('span');
            timeSpan.className = 'time';
            timeSpan.textContent = time;
            
            const userSpan = document.createElement('span');
            userSpan.className = 'username';
            userSpan.textContent = userName;
            
            const messageSpan = document.createElement('span');
            messageSpan.className = 'message-text';
            messageSpan.textContent = text;
            
            item.appendChild(timeSpan);
            item.appendChild(userSpan);
            item.appendChild(messageSpan);
            messages.appendChild(item);
            
            // Scroll al final de los mensajes
            messages.scrollTop = messages.scrollHeight;
        });
    </script>
</body>
</html>