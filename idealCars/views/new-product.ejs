<%- include('header.ejs') %>
<style>
  .main-bg-container {
    padding: 1rem;
    padding-top: 2rem; /* Reducido para evitar espacio excesivo */
    background-color: var(--color-bg); /* Usar variable de tema */
    display: flex;
    flex-direction: column; /* Cambio a columna para mejor flujo */
    align-items: center;
    width: 100%;
    box-sizing: border-box;
    overflow: visible; /* Permitir que el contenido fluya naturalmente */
  }
  
  .FormCard {
    max-width: 800px;
    width: 100%;
    margin: 1rem auto 2rem auto; /* Añadir margen inferior */
    padding: 1.5rem;
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
    position: relative;
    overflow: visible;
    border-top: 4px solid var(--color-primary);
    box-sizing: border-box;
  }
  
  /* Ajustes responsive */
  @media (max-width: 768px) {
    .FormCard {
      padding: 1rem;
      margin: 0.5rem auto 1.5rem auto;
      width: 95%;
    }
    
    .main-bg-container {
      padding: 0.5rem;
      padding-top: 1rem;
    }
  }
  
  .FormCard h1 {
    color: var(--color-primary);
    font-weight: 600;
    margin-bottom: 1.5rem;
    position: relative;
    text-align: center;
  }
  
  .FormCard h1:after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 3px;
    background: var(--color-primary);
    border-radius: 3px;
  }
  
  .form_input {
    position: relative;
    margin-bottom: 1.5rem !important;
    width: 100%;
  }
  
  .form_input label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: var(--color-text-dark);
    transition: all 0.3s ease;
  }
  
  .input {
    width: 100%;
    padding: 0.75rem 1rem;
    border: 1px solid #ddd;
    border-radius: 6px;
    font-size: 1rem;
    transition: all 0.3s ease;
    box-sizing: border-box;
  }
  
  .input:focus {
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px rgba(0, 191, 255, 0.15);
    outline: none;
  }
  
  .input:focus + label {
    color: var(--color-primary);
  }
  
  .form_action {
    margin-top: 1rem;
    text-align: center;
    width: 100%;
  }
  
  .form_action button {
    background-color: var(--color-primary);
    color: white;
    border: none;
    padding: 0.8rem;
    border-radius: 6px;
    font-weight: 600;
    font-size: 1rem;
    transition: all 0.3s ease;
    cursor: pointer;
    width: 100%;
    letter-spacing: 0.5px;
    text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);
  }
  
  .form_action button:hover {
    background-color: var(--color-primary-hover);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 191, 255, 0.2);
  }
  
  /* Animaciones suavizadas */
  .form_input .input {
    transform: translateY(0);
    opacity: 1;
    animation: fadeInUp 0.4s ease-out;
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Retrasos en animación más cortos */
  .form_input:nth-child(1) .input { animation-delay: 0.05s; }
  .form_input:nth-child(2) .input { animation-delay: 0.1s; }
  .form_input:nth-child(3) .input { animation-delay: 0.15s; }
  .form_input:nth-child(4) .input { animation-delay: 0.2s; }
  .form_input:nth-child(5) .input { animation-delay: 0.25s; }
  .form_input:nth-child(6) .input { animation-delay: 0.3s; }
  .form_input:nth-child(7) .input { animation-delay: 0.35s; }

  .form_action button {
    animation: fadeInUp 0.5s ease-out;
    animation-delay: 0.4s;
    opacity: 1;
  }
  
  /* Elemento decorativo reposicionado */
  .FormCard::before {
    content: '';
    position: absolute;
    top: -30px;
    right: 30px; /* Ajustado para que no cause overflow */
    width: 60px;
    height: 60px;
    background: var(--color-primary);
    opacity: 0.1;
    border-radius: 50%;
    animation: pulse 4s infinite;
    pointer-events: none;
    z-index: 0;
  }
  
  @keyframes pulse {
    0% { transform: scale(1); opacity: 0.1; }
    50% { transform: scale(1.2); opacity: 0.15; }
    100% { transform: scale(1); opacity: 0.1; }
  }
  
  /* Mejora para inputs tipo archivo */
  input[type="file"] {
    padding: 0.5rem;
    background-color: #f8f9fa;
    border: 1px dashed #ccc;
    width: 100%;
    box-sizing: border-box;
  }
  
  input[type="file"]:hover {
    background-color: #f0f0f0;
    border-color: var(--color-primary);
  }
  
  /* Animación del formulario */
  .FormCard {
    animation: slideIn 0.5s ease-out forwards;
  }
  
  @keyframes slideIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  /* Estilos para formulario */
  form {
    width: 100%;
    max-width: 100%;
    box-sizing: border-box;
  }
</style>
<main class="main-bg-container">
  <section class="FormCard">
      <h1 class="mb-4"><%= __('newProduct.title') %></h1>
    <form action="/products/new" method="POST" enctype="multipart/form-data">
      <div class="form_input mb-3">
        <label for="name"><%= __('newProduct.name') %></label>
        <input class="input" type="text" id="name" name="name" required>
      </div>
      <div class="form_input mb-3">
        <label for="model"><%= __('newProduct.model') %></label>
        <input class="input" type="text" id="model" name="model" required>
      </div>
      <div class="form_input mb-3">
        <label for="color"><%= __('newProduct.color') %></label>
        <input class="input" type="text" id="color" name="color" required>
      </div>
      <div class="form_input mb-3">
        <label for="year"><%= __('newProduct.year') %></label>
        <input class="input" type="number" id="year" name="year" required>
      </div>
      <div class="form_input mb-3">
        <label for="price"><%= __('newProduct.price') %></label>
        <input class="input" type="number" id="price" name="price" required>
      </div>
      <div class="form_input mb-3">
        <label for="kilometer"><%= __('newProduct.kilometer') %></label>
        <input class="input" type="number" id="kilometer" name="kilometer" required>
      </div>
      <div class="form_input mb-3">
        <label for="image" style="color: black;"><%= __('newProduct.image') %></label>
        <input class="input" type="file" id="image" name="image" accept="image/*">
      </div>
      <div class="form_action">
        <button type="submit" class="btn btn-primary"><%= __('newProduct.create') %></button>
      </div>
    </form>
  </section>
</main>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Efecto de focus para los inputs
    const inputs = document.querySelectorAll('.input');
    
    inputs.forEach(input => {
      input.addEventListener('focus', function() {
        this.parentElement.classList.add('active');
      });
      
      input.addEventListener('blur', function() {
        if (this.value === '') {
          this.parentElement.classList.remove('active');
        }
      });
      
      // Check if input has value on page load
      if (input.value !== '') {
        input.parentElement.classList.add('active');
      }
    });
    
    // Animación para el botón submit
    const submitButton = document.querySelector('.form_action button');
    submitButton.addEventListener('mouseenter', function() {
      this.style.transform = 'translateY(-2px)';
    });
    
    submitButton.addEventListener('mouseleave', function() {
      this.style.transform = 'translateY(0)';
    });
    
    // Mejora para la interacción con el campo de carga de archivos
    const fileInput = document.querySelector('input[type="file"]');
    if (fileInput) {
      fileInput.addEventListener('change', function() {
        if (this.files.length > 0) {
          const fileName = this.files[0].name;
          this.style.borderColor = 'var(--color-primary)';
          this.style.borderStyle = 'solid';
        } else {
          this.style.borderColor = '#ccc';
          this.style.borderStyle = 'dashed';
        }
      });
    }
    
    // Validación básica de formulario con feedback visual
    const form = document.querySelector('form');
    form.addEventListener('submit', function(event) {
      const allInputs = this.querySelectorAll('input[required]');
      let isValid = true;
      
      allInputs.forEach(input => {
        if (!input.value.trim()) {
          isValid = false;
          input.style.borderColor = '#ff6b6b';
          setTimeout(() => {
            input.style.borderColor = '#ddd';
          }, 2000);
        }
      });
      
      if (!isValid) {
        event.preventDefault();
      } else {
        // Efecto de feedback al enviar
        const submitBtn = this.querySelector('button[type="submit"]');
        submitBtn.textContent = 'Enviando...';
        submitBtn.style.opacity = '0.8';
      }
    });
  });

  document.querySelector('input[type="file"]').addEventListener('change', function (e) {
    const previewContainer = document.getElementById('preview-container');
    previewContainer.innerHTML = '';  

    for (let i = 0; i < e.target.files.length; i++) {
      const file = e.target.files[i];
      const reader = new FileReader();

      reader.onload = function (event) {
        const imageContainer = document.createElement('div');
        imageContainer.style.display = 'flex';
        imageContainer.style.alignItems = 'center';
        imageContainer.style.marginBottom = '10px'

        const img = document.createElement('img');
        img.src = event.target.result;
        img.alt = file.name;
        img.style.maxWidth = '100px';
        img.style.marginRight = '10px';

        const deleteBtn = document.createElement('button');
        deleteBtn.textContent = 'Eliminar';
        deleteBtn.style.backgroundColor = '#ff6b6b';
        deleteBtn.style.color = 'white';
        deleteBtn.style.border = 'none';
        deleteBtn.style.padding = '5px 10px';
        deleteBtn.style.cursor = 'pointer';
        deleteBtn.style.borderRadius = '4px';
        deleteBtn.style.marginLeft = '10px';

        deleteBtn.addEventListener('click', function () {
          previewContainer.removeChild(imageContainer);
        });

        
        imageContainer.appendChild(img);
        imageContainer.appendChild(deleteBtn);
        previewContainer.appendChild(imageContainer);
      };

      reader.readAsDataURL(file);  
    }
  });
</script>
<%- include('footer.ejs') %>