<%- include('header.ejs') %>


<link rel="stylesheet" href="/css/new-product.css">
<link rel="stylesheet" href="style.css">
<main class="main-bg-container">
 
  <section class="FormCard">
    <h1 class="mb-4 text-center"><%= __('newProduct.title') %></h1>
    <form action="/products/new" method="POST" enctype="multipart/form-data" novalidate>
    

      <div class="form_input mb-3">
        <label for="name" style="color: #00bfff"><%= __('newProduct.name') %></label>
        <input class="input" type="text" id="name" name="name" value="<%= name || ''  %>" required >
        <% if (errors.name) { %>
          <div class="validate" role="alert">
            <%= errors.name.msg %>
          </div>
        <% } %>
      </div>
      <div class="form_input mb-3">
        <label for="model" style="color: #00bfff"><%= __('newProduct.model') %></label>
        <input class="input" type="text" id="model" name="model" value="<%= model || '' %>" required >
        <% if (errors.model) { %>
          <div class="validate" role="alert">
            <%= errors.model.msg %>
          </div>
        <% } %>
      </div>
      <div class="form_input mb-3">
        <label for="color" style="color:#00bfff"><%= __('newProduct.color') %></label>
        <input class="input" type="text" id="color" name="color" value="<%= color || '' %>" required>
        <% if (errors.color) { %>
          <div class="validate" role="alert">
            <%= errors.color.msg %>
          </div>
        <% } %>
      </div>
      <div class="form_input mb-3">
        <label for="year" style="color:#00bfff"><%= __('newProduct.year') %></label>
        <input class="input" type="number" id="year" name="year" value="<%= year || '' %>" required>
        <% if (errors.year) { %>
          <div class="validate" role="alert">
            <%= errors.year.msg %>
          </div>
        <% } %>
      </div>
      <div class="form_input mb-3">
        <label for="price" style="color: #00bfff"><%= __('newProduct.price') %></label>
        <input class="input" type="number" id="price" name="price" value="<%= price || '' %>" required>
        <% if (errors.price) { %>
          <div class="validate" role="alert">
            <%= errors.price.msg %>
          </div>
        <% } %>
      </div>
      <div class="form_input mb-3">
        <label for="kilometer" style="color:#00bfff"><%= __('newProduct.kilometer') %></label>
        <input class="input" type="number" id="kilometer" name="kilometer" value="<%= kilometer || '' %>" required>
        <% if (errors.kilometer) { %>
          <div class="validate" role="alert">
            <%= errors.kilometer.msg %>
          </div>
        <% } %>
      </div>
      <div class="form_input mb-3">
        <label for="image" style="color: #00bfff"><%= __('newProduct.image') %></label>
        <input class="input" type="file" accept=".jpg, .png, jpeg" id="images" name="images" multiple>
        <div id="preview-container" style="display: flex; flex-wrap: wrap; gap: 10px; margin-top: 10px;"></div>
      </div>
      <div class="form_action">
        <button type="submit" class="btn btn-primary"><%= __('newProduct.create') %></button>
      </div>
    </div>
    </form>
  </section>
</main>

<script>

document.addEventListener('DOMContentLoaded', function() {
  // Efecto de focus para los inputs
  const inputs = document.querySelectorAll('.input');
  
  inputs.forEach(input => {
    input.addEventListener('focus', function() {
      this.parentElement.classList.add('active');
      });
      
      input.addEventListener('blur', function() {
        if (this.value === '') {
          this.parentElement.classList.remove('active');
        }
      });
      
      // Check if input has value on page load
      if (input.value !== '') {
        input.parentElement.classList.add('active');
      }
    });
    
    // Animación para el botón submit
    const submitButton = document.querySelector('.form_action button');
    submitButton.addEventListener('mouseenter', function() {
      this.style.transform = 'translateY(-2px)';
    });
    
    submitButton.addEventListener('mouseleave', function() {
      this.style.transform = 'translateY(0)';
    });
    
    // Mejora para la interacción con el campo de carga de archivos
    const fileInput = document.querySelector('input[type="file"]');
    if (fileInput) {
      fileInput.addEventListener('change', function() {
        if (this.files.length > 0) {
          const fileName = this.files[0].name;
          this.style.borderColor = 'var(--color-primary)';
          this.style.borderStyle = 'solid';
        } else {
          this.style.borderColor = '#ccc';
          this.style.borderStyle = 'dashed';
        }
      });
    }
    /*
    // Validación básica de formulario con feedback visual
    const form = document.querySelector('form');
    form.addEventListener('submit', function(event) {
      const allInputs = this.querySelectorAll('input[required]');
      let isValid = true;
      
      allInputs.forEach(input => {
        if (!input.value.trim()) {
          isValid = false;
          input.style.borderColor = '#ff6b6b';
          setTimeout(() => {
            input.style.borderColor = '#ddd';
          }, 500);
        }
      });
      
      if (!isValid) {
        event.preventDefault();
      } else {
        // Efecto de feedback al enviar
        const submitBtn = this.querySelector('button[type="submit"]');
        submitBtn.textContent = 'Enviando...';
        submitBtn.style.opacity = '0.8';
      }
    });
    */
  });

  document.querySelector('input[type="file"]').addEventListener('change', function (e) {
    const previewContainer = document.getElementById('preview-container');
    previewContainer.innerHTML = '';  

    for (let i = 0; i < e.target.files.length; i++) {
      const file = e.target.files[i];
      const reader = new FileReader();

      reader.onload = function (event) {
        const imageContainer = document.createElement('div');
        imageContainer.style.display = 'flex';
        imageContainer.style.alignItems = 'center';
        imageContainer.style.marginBottom = '10px'

        const img = document.createElement('img');
        img.src = event.target.result;
        img.alt = file.name;
        img.style.maxWidth = '100px';
        img.style.marginRight = '10px';

        const deleteBtn = document.createElement('button');
        deleteBtn.textContent = 'Eliminar';
        deleteBtn.style.backgroundColor = '#ff6b6b';
        deleteBtn.style.color = 'white';
        deleteBtn.style.border = 'none';
        deleteBtn.style.padding = '5px 10px';
        deleteBtn.style.cursor = 'pointer';
        deleteBtn.style.borderRadius = '4px';
        deleteBtn.style.marginLeft = '10px';

        deleteBtn.addEventListener('click', function () {
          previewContainer.removeChild(imageContainer);
        });

        
        imageContainer.appendChild(img);
        imageContainer.appendChild(deleteBtn);
        previewContainer.appendChild(imageContainer);
      };

      reader.readAsDataURL(file);  
    }
  });
</script>
<%- include('footer.ejs') %>